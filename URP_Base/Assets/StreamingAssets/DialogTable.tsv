Category	Key	Kor
방어적 프로그래밍	방어적 프로그래밍-1	방어적 프로그래밍은 개발자의 기본 소양이다.
방어적 프로그래밍	방어적 프로그래밍-2	방어적 프로그래밍을 해라 코드로 방어하지 말고 너에게 들어오는 일감을 방어해라.
방어적 프로그래밍	방어적 프로그래밍-3	작업량이 많은가? 그냥 특정 테스트 케이스에서만 돌아가게 짜고 나머지는 "고도화" 작업에서 한다고 해라. "고도화" 작업 전에 이직하자.
방어적 프로그래밍	방어적 프로그래밍-4	구현의 가능성은 남이 아닌 결국 코딩을 하는 내가 결정하는 것이다. 맘 편하게 기획자에게 그건 구현 불가능하다고 말하자.
방어적 프로그래밍	방어적 프로그래밍-5	일감을 방어했다면 이번엔 몸을 지킬차례이다. 대문자는 최대한 지양하면서 새끼손가락 골절을 방어해보자.
멀티 쓰레드	멀티 쓰레드-1	멀티쓰레드는 머리가 아프다. 동시성은 어렵고, 성과가 눈에 띄지 않는다.
멀티 쓰레드	멀티 쓰레드-2	멀티 쓰레드 환경에서 가변 변수 사용으로 인한 오류는 가끔 발생한다. 가끔 발생한다는 거에 비하여 사용은 너무 편하다. 누가 뭐라고 하면 그럴 일 없다고 하면 그만이다.
멀티 쓰레드	멀티 쓰레드-3	어쩔 수 없이 멀티 쓰레드 업무가 들어오면 언어를 욕하면서 이 작업이 왜 어려운지 설명해라, 아 이 언어는 Actor 모델이 빈약해서요, CSP(Communicating Sequential Processes) 구현체가 없어서요, STM(Software Transactional Memory) 이 지원 안 돼서요. 욕을 할수록 작업 기한이 늘어난다.
멀티 쓰레드	멀티 쓰레드-4	비동기 흐름 내에서 동기함수를 몰래 써도 된다. 나중에 병목 찾는 작업 + 비동기로 개선하는 추가 작업 기한까지 함께 받을 수 있다.
문서화	문서화-1	문서화를 하기전에 우리의 본분을 잊지 말자.
문서화	문서화-2	주석은 절대 작성하지 않는다. 누가 뭐라고 하면 클린코드를 들먹이자. 물론 그렇다고 해서 코드가 리더블하지는 않다.
문서화	문서화-3	우리는 개발자다, 어떠한 이유에서든지 문서 작성은 금물. 누가 뭐라고 하면 "코드가 곧 문서".
문서화	문서화-4	히스토리는 필요 없다. 과거에 연연하지 말자.
문서화	문서화-5	인수인계 문서는 필요 없다. 누가 뭐라고 하면 내 코드는 보면 바로 이해가 간다고 하자. 미련 없이 떠나자.
문서화	문서화-6	GPT의 발전 속도는 어마무시하다. 문서가 필요하다는 사람이 있다면 곧 인공지능이 알아서 만들어 줄 것 이라고 말하자.
문서화	문서화-7	AI 시대, ChatGPT를 적극 활용하자. 문서화가 필요하면 ChatGPT에게 질문하여 문서 내용을 생성하게 하자. 누가 뭐라고 하면, "인공지능이 더 정확하다"고 하자.